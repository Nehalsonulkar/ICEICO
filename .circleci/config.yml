version: 2.1

jobs:
  continuous-integration:
    docker:
      - image: cimg/base:stable
    resource_class: medium
    steps:
      - checkout
      - run: 
          name: lint code
          command: echo "Linting repository"
      - run: 
          name: run unit tests
          command: echo "Running unit tests"

  continuous-delivery:
    docker:
      - image: amazon/aws-cli:latest  # AWS CLI image
    resource_class: medium
    environment:
      REPOSITORY: finance-complaint
      IMAGE_NAME: finance-complaint
      IMAGE_TAG: latest
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_DEFAULT_REGION: "ap-south-1"
    steps:
      - checkout
      - run:
          name: Authenticate AWS CLI
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set default.region $AWS_DEFAULT_REGION

      - run:
          name: Build Docker Image
          command: docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - run:
          name: Login to AWS ECR
          command: |
            aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin <AWS_ACCOUNT_ID>.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

      - run:
          name: Push to AWS ECR
          command: |
            docker tag $IMAGE_NAME:$IMAGE_TAG <AWS_ACCOUNT_ID>.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_NAME:$IMAGE_TAG
            docker push <AWS_ACCOUNT_ID>.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_NAME:$IMAGE_TAG

  continuous-deployment:
    machine: true
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Pull Docker Image from AWS ECR
          command: docker pull <AWS_ACCOUNT_ID>.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_NAME:$IMAGE_TAG
        
      - run: 
          name: Start Docker Compose
          command: docker-compose up -d

workflows:
  version: 2
  CICD:
    jobs:
      - continuous-integration
      - continuous-delivery:
          requires:
            - continuous-integration
      - sanity-check:
          type: approval
          requires:
            - continuous-delivery
      - continuous-deployment:
          requires:
            - sanity-check
            - continuous-delivery
